{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/chat-bus.service.ts","webpack:///./src/app/online-users/online-users.component.css","webpack:///./src/app/online-users/online-users.component.html","webpack:///./src/app/online-users/online-users.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,4zB;;;;;;;;;;;;;;;;;;;;;;;;;ACA0C;AACU;AAQpD;IAGE,sBAAoB,OAAsB;QAAtB,YAAO,GAAP,OAAO,CAAe;QAF1C,UAAK,GAAG,KAAK,CAAC;QAyBd,SAAI,GAAQ,EAAE,CAAC;QACf,QAAG,GAAQ,EAAE,CAAC;QACd,SAAI,GAAC,EAAE,CAAC;QACR,cAAS,GAAS,KAAK,CAAC;IAxBxB,CAAC;IACD,+BAAQ,GAAR;IAEA,CAAC;IAED,8BAAO,GAAP;QAAA,iBAOC;QALC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAChC,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC;QACpB,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,UAAC,GAAG,IAAG,YAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAnB,CAAmB,CAAC,CAAC;QAChE,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC,SAAS,EAAE,CAAC;IAC9C,CAAC;IACD,kCAAW,GAAX;QACE,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,GAAE,KAAK,GAAC,IAAI,CAAC,GAAG,CAAC;QACnD,IAAI,CAAC,GAAG,GAAC,EAAE,CAAC;IACd,CAAC;IACD,iCAAU,GAAV;IAEA,CAAC;IAxBU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAI4B,gEAAc;OAH/B,YAAY,CA8BxB;IAAD,mBAAC;CAAA;AA9BwB;;;;;;;;;;;;;;;;;;;;;;;;;;ACTiC;AACjB;AACC;AAEK;AAC8B;AAc7E;IAAA;IAAyB,CAAC;IAAb,SAAS;QAZrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,yFAAoB;aACrB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;aACZ;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBqB;AACE;AACX;AAKlC;IAEE;QA0DC,SAAI,GAAQ,EAAE,CAAC;QACf,mBAAc,GAAC,EAAE,CAAC;IAzDlB,CAAC;IACD,gCAAO,GAAP,UAAQ,IAAI;QAGV,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACjC,IAAI,CAAC,MAAM,GAAG,6CAAQ,CAAC,uCAAuC,EAAC;YAC7D,eAAe,EAAC,KAAK;SACrB,CAAC,CAAC;QACC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,EAAC,IAAI,CAAC,CAAC;IAC9C,CAAC;IAEH,qDAAqD;IACrD,8BAA8B;IAC9B,UAAU;IACV,+CAA+C;IAC/C,KAAK;IAEH,oCAAW,GAAX,UAAY,GAAG;QACb,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,EAAC,GAAG,CAAC;IACrC,CAAC;IAED,mCAAU,GAAV;QAAA,iBAQC;QAPC,IAAI,CAAC,MAAM,CAAC,eAAe,GAAC,KAAK,CAAC;QAClC,MAAM,CAAC,IAAI,+CAAU,CAAC,kBAAQ;YAC5B,KAAI,CAAC,MAAM,CAAC,EAAE,CAAC,aAAa,EAAC,UAAC,IAAW;gBAEvC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;YACrB,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAED,kCAAS,GAAT;QAAA,iBAQC;QAPC,MAAM,CAAC,IAAI,+CAAU,CAAC,kBAAQ;YAC5B,KAAI,CAAC,MAAM,CAAC,EAAE,CAAC,wBAAwB,EAAC,UAAC,IAAQ;gBAChD,sBAAsB;gBACtB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBACjB,KAAI,CAAC,cAAc,GAAC,IAAI;YAC1B,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAED,yCAAgB,GAAhB;QAAA,iBAMC;QALC,MAAM,CAAC,IAAI,+CAAU,CAAC,kBAAQ;YAC5B,KAAI,CAAC,MAAM,CAAC,EAAE,CAAC,mBAAmB,EAAC,UAAC,IAAQ;gBAC1C,KAAI,CAAC,cAAc,GAAC,IAAI;YAC1B,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAEM,gCAAO,GAAd,UAAe,KAAY;QAA3B,iBAID;QAHG,MAAM,CAAC,IAAI,+CAAU,CAAQ,kBAAQ;YACjC,KAAI,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,cAAM,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;IACP,CAAC;IAzDU,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,cAAc,CA+D1B;IAAD,qBAAC;CAAA;AA/D0B;;;;;;;;;;;;ACP3B,mB;;;;;;;;;;;ACAA,mIAAmI,UAAU,uX;;;;;;;;;;;;;;;;;;;;;;;;ACApF;AAOzD;IAEE;IAAgB,CAAC;IAKjB,uCAAQ,GAAR;IACA,CAAC;IAHC;QADC,2DAAK,EAAE;;0DACO;IALN,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;;OACW,oBAAoB,CAUhC;IAAD,2BAAC;CAAA;AAVgC;;;;;;;;;;;;;;ACPjC;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;ACXlC,e","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"\\n<div class=\\\"container\\\">\\n \\n \\n    <div class=\\\"jumbotron\\\" >\\n        <h1 class=\\\"display-4\\\">Hello, world!</h1>\\n        <p class=\\\"lead\\\">This is a chat demo made with Socket.IO and NodeJS</p>\\n        <hr class=\\\"my-4\\\">\\n        <div >\\n            <p>User Name: <input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" />  \\n            </p>\\n          <p class=\\\"lead\\\">\\n              <input (click)=\\\"Connect()\\\" class=\\\"btn btn-primary\\\" value=\\\"Connect\\\" type=\\\"button\\\" title=\\\"Connect\\\" />\\n          </p>\\n        </div>\\n        \\n      </div>\\n  \\n \\n<div *ngIf=\\\"connected\\\">\\n  <div class=\\\"row \\\">\\n    <div  class=\\\"col-md-4 mb-3\\\" *ngFor=\\\"let user of chatBus.connectedUsers\\\" >\\n      <online-users [userName]=\\\"user\\\">\\n        </online-users>\\n      </div>\\n  </div>\\n    \\n</div>\\n  \\n</div>\\n\\n\"","import { Component } from '@angular/core';\nimport { ChatBusService } from './chat-bus.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n  \n  constructor(private chatBus:ChatBusService){\n\n  }\n  ngOnInit(){\n    \n  }\n\n  Connect(){\n    \n    this.chatBus.connect(this.name);\n    this.connected=true;\n    this.chatBus.getMessage().subscribe((msg)=>this.msgs.push(msg));\n    this.chatBus.onNewUser().subscribe();\n    this.chatBus.onUserDisconnect().subscribe();\n  }\n  sendMessage(){\n    this.chatBus.sendMessage(this.name +\" : \"+this.msg)\n    this.msg=\"\";\n  }\n  getMessage(){\n    \n  }\n  socket:any;\n  name:string=\"\";\n  msg:string=\"\";\n  msgs=[];\n  connected:boolean=false;\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms'\n\nimport { AppComponent } from './app.component';\nimport { OnlineUsersComponent } from './online-users/online-users.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    OnlineUsersComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport * as socketIo from 'socket.io-client';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatBusService {\n\n  constructor() {\n\n   }\n   connect(name){\n     \n    \n     console.log(this.connectedUsers);\n     this.socket = socketIo(\"wss://rrnodechatserver.herokuapp.com/\",{\n       withCredentials:false\n      });\n          this.socket.emit(\"new-connection\",name);\n    }\n\n  //   this.socket = socketIo(\"http://localhost:3000\",{\n  //       withCredentials:false\n  //     });\n  //     this.socket.emit(\"new-connection\",name);\n  //  }\n\n    sendMessage(msg){\n      this.socket.emit(\"new-message\",msg)\n    }\n\n    getMessage(){\n      this.socket.withCredentials=false;\n      return new Observable(observer=>{\n        this.socket.on(\"new-message\",(data:string)=>{\n          \n          observer.next(data)\n        })\n      }) \n    }\n\n    onNewUser(){\n      return new Observable(observer=>{\n        this.socket.on(\"new-connection-success\",(data:any)=>{\n         // observer.next(data)\n         console.log(data);\n          this.connectedUsers=data\n        })\n      })\n    }\n\n    onUserDisconnect(){\n      return new Observable(observer=>{\n        this.socket.on(\"user-disconnected\",(data:any)=>{\n          this.connectedUsers=data\n        })\n      })\n    }\n\n    public onEvent(event: Event): Observable<any> {\n      return new Observable<Event>(observer => {\n          this.socket.on(event, () => observer.next());\n      });\n  }\n\n   socket:any;\n   name:string=\"\";\n   connectedUsers=[];\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"card rounded border border-info\\\">\\n    <div class=\\\"card-body\\\">\\n      <h5 class=\\\"card-title\\\">{{userName}}</h5>\\n      <h6 class=\\\"card-subtitle mb-2 text-muted\\\">Developer</h6>\\n      <p class=\\\"card-text\\\">Programming is the best</p>\\n      <a href=\\\"#\\\" class=\\\"card-link\\\"><input type=\\\"button\\\" class=\\\"btn btn-primary\\\" value=\\\"Chat\\\"></a>\\n      <a href=\\\"#\\\" class=\\\"card-link\\\"><input type=\\\"button\\\" class=\\\"btn btn-warning\\\" value=\\\"Details\\\"></a>\\n    </div>\\n  </div>\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'online-users',\n  templateUrl: './online-users.component.html',\n  styleUrls: ['./online-users.component.css']\n})\nexport class OnlineUsersComponent implements OnInit {\n\n  constructor() { }\n\n    @Input()\n    userName:string\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","/* (ignored) */"],"sourceRoot":""}